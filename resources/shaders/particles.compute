#version 430 core

//dForce calculations

uniform int N;
uniform float g;

layout(binding = 0) buffer posBuffer{
	vec4 positions[];
};
layout(binding = 1) buffer massBuffer{
	float masses[];
};
layout(binding = 2) buffer dForceBuffer{
	vec4 dForces[]; //Actually accelerations
};

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void main(){
	const uint gidx = gl_GlobalInvocationID.x;
	const uint gidy = gl_GlobalInvocationID.y;
	
	if(gidx < N && gidy < N && gidx != gidy){
		vec4 p = vec4(positions[gidx].xyz - positions[gidy].xyz, 1);
		float d = length(p.xyz);
		dForces[N * gidx + gidy] = -g * masses[gidy] * p / (d * d * d);
	}
}