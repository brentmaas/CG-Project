#version 430 core

//dForce calculations

uniform int N;
uniform float g;

layout(binding = 0) buffer posBuffer{
	float positions[];
};
layout(binding = 1) buffer massBuffer{
	float masses[];
};
layout(binding = 2) buffer dForceBuffer{
	float dForces[];
};

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void main(){
	const uint gidx = gl_GlobalInvocationID.x;
	const uint gidy = gl_GlobalInvocationID.y;
	
	if(gidx < N && gidy < N && gidx != gidy){
		vec3 p = vec3(positions[3 * gidx], positions[3 * gidx + 1], positions[3 * gidx + 2]);
		float d = length(p);
		vec3 f = -g * masses[gidx] * masses[gidy] * p / (d * d * d);
	}
}