#version 430 core

//Velocity and position calculations

uniform int N;
uniform float dt;

layout(binding = 0) buffer posBuffer{
	vec4 positions[];
};
layout(binding = 1) buffer velBuffer{
	vec4 velocities[];
};
layout(binding = 2) buffer dForceBuffer{
	vec4 dForces[];
};

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void main(){
	const uint gid = gl_GlobalInvocationID.x;
	
	if(gid < N){
		vec4 f = vec4(0, 0, 0, 0);
		for(int i = 0;i < N;i++) if(i != gid){
			f.xyz += dForces[N * gid + i].xyz;
		}
		//positions[gid] += vec4(velocities[gid].xyz * dt + f.xyz * dt * dt / 2, 0);
		positions[gid] += vec4(velocities[gid].xyz * dt, 0);
		velocities[gid] += vec4(f.xyz * dt, 0);
	}
}