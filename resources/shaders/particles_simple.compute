#version 430 core

uniform int N;
uniform float m;
uniform float g;
uniform float dt;

layout(binding = 0) buffer posBuffer{
	vec4 x[];
};
layout(binding = 1) buffer posTargetBuffer{
	vec4 xt[];
};
layout(binding = 2) buffer velBuffer{
	vec4 v[];
};
layout(binding = 3) buffer velTargetBuffer{
	vec4 vt[];
};

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void main(){
	const uint gid = gl_GlobalInvocationID.x;
	if(gid < N){
		float d = length(x[gid]);
		vec4 a = -g * m / (d * d * d) * x[gid];
		if(length(a) * 0.5f < length(v[gid] + a * dt)){
			xt[gid] = x[gid] + v[gid] * dt + a * dt * dt / 2;
			vt[gid] = v[gid] + a * dt;
		}else{
			xt[gid] = length(x[gid]) * normalize(x[gid] + v[gid] * dt);
			vt[gid] = length(v[gid]) * normalize(xt[gid] - x[gid]);
		}
	}
}